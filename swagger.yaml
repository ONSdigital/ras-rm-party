openapi: 3.0.2
info:
  title: RAS/RM Party Service
  description: A service for dealing with various parties (businesses, survey respondents etc and their enrolments)
  version: "1.0"

servers:
  - url: https://localhost:8081/party-api/v1
    description: The default path for Party in ras-rm-docker-dev

tags:
  - name: info
    description: Informational endpoints
  - name: respondents
    description: Endpoints for interacting with survey respondents

paths:
  /info:
    get:
      summary: Returns basic information about the service.
      description: Returns service information. If the `REPORT_DEPENDENCIES` environment variable is set to true, it will also report information on service dependencies.
      tags:
        - info
      servers:
        - url: https://localhost:8081
          description: The /info path doesn't use the /party-api/v1 prefix
      responses:
        '200':
          description: A JSON of basic information about the service.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: ras-rm-party
                  version:
                    type: string
                    example: "1.12.0"
                  dependencies:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: ras-party-db
  /emailverification/{token}:
    put:
      summary: Verifies a respondent's email.
      description: Checks the token is valid and in-date and then sets the respondent's account to ACTIVE.
      tags:
        - respondents
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      deprecated: true
      responses:
        '200':
          description: The token was valid and the respondent's account is now active.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/BadTokenError'
        '409':
          $ref: '#/components/responses/ExpiredTokenError'
  /resend-password-email-expired-token/{token}:
    post:
      summary: Resends a password reset email.
      description: Decodes the token to find the respondent and sends them a new password reset email.
      tags:
        - respondents
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      deprecated: true
      responses:
        '200':
          $ref: '#/components/responses/EmailSent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
  /resend-verification-email/{party_uuid}:
    post:
      summary: Resends a verification email.
      description: Looks up a respondent via their `party_uuid` and sends them a new verification email.
      tags:
        - respondents
      parameters:
        - in: path
          name: party_uuid
          required: true
          schema:
            type: string
            format: uuid
      deprecated: true
      responses:
        '200':
          $ref: '#/components/responses/EmailSent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
  /resend-verification-email-expired-token/{token}:
    post:
      summary: Resends a verification email.
      description: Decodes the token to find the respondent and sends them a new verification email.
      tags:
        - respondents
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      deprecated: true
      responses:
        '200':
          $ref: '#/components/responses/EmailSent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
  /respondents:
    post:
      summary: Creates a new respondent as well as any enrolments.
      description: Will put a new respondent and their enrolments in the database. If an `ID` field is provided, it will use this rather than generating a new UUID.
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailAddress:
                  type: string
                  format: email
                  example: new.employee@email.com
                firstName:
                  type: string
                  example: Johnny
                lastName:
                  type: string
                  example: Testerman
                password:
                  type: string
                  example: TAM*$4[7q>dh?s)&
                telephone:
                  type: string
                  example: 01234567890
                enrolmentCode:
                  type: string
                  example: g023at6a
                ID:
                  type: string
                  format: uuid
                  example: 2bc5fd04-8f9e-4ec0-bddf-bc646da3cdef
      responses:
        '200':
          description: The respondent was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespondentDetails'
        '400':
          description: One of the fields was missing or wrong (eg email already used, invalid enrolment code).
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/BusinessAssociationError'
  /respondents/add-survey:
    post:
      summary: Adds an existing respondent to a survey.
      description: Adds a respondent to a survey using their Party ID and an Enrolment Code.
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                party_id:
                  type: string
                  format: uuid
                  example: 8bfd05da-a4cd-4c9e-8bdd-3cb1fdaa2202
                enrolment_code:
                  type: string
                  example: 0pq6m33k
      responses:
        '200':
          description: The respondent was enrolled on the survey.
        '400':
          description: One of the fields was missing or the enrolment code was invalid.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/BusinessAssociationError'
  /respondents/email:
    put:
      summary: Changes a respondent's email address.
      description: Will update the respondent's email in the ras-party database and send a new verification email to the respondent. Functionally identical to `PUT /respondents/change_email`
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: old@email.com
                new_email_address:
                  type: string
                  format: email
                  example: new@email.com
      responses:
        '200':
          description: The email is changed and a JSON representing the respondent is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespondentDetails'
        '400':
          description: The provided request body was missing one of the required parameters.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: A respondent couldn't be found for the email address provided in `email_address`.
        '409':
          description: The email address provided in `new_email_address` is already in use for a different respondent.
  /respondents/change_email:
    put:
      summary: Changes a respondent's email address.
      description: Will update the respondent's email in the ras-party database and send a new verification email to the respondent. Functionally identical to `PUT /respondents/email`
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: old@email.com
                new_email_address:
                  type: string
                  format: email
                  example: new@email.com
      responses:
        '200':
          description: The email is changed and a JSON representing the respondent is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespondentDetails'
        '400':
          description: The provided request body was missing one of the required parameters.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: A respondent couldn't be found for the email address provided in `email_address`.
        '409':
          description: The email address provided in `new_email_address` is already in use for a different respondent.
  /respondents/change_password:
    put:
      summary: Changes a respondent's password.
      description: Will update the respondent's password in the auth database and send them a confirmation email. It will also set the respondent's account to ACTIVE and their enrolments to ENABLED.
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: hello@email.com
                new_password:
                  type: string
                  example: 6yNv!?DQs2/RuW45
      responses:
        '200':
          description: The password was successfully changed and the respondent's statuses updated.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
        '500':
          description: There was a problem communicating with the auth service.
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    example: Failed to change respondent password
  /respondents/request_password_change:
    post:
      summary: Requests a password change link to be sent to a respondent's email.
      description: Generates a token and puts that into the correct GOV.UK Notifications Service template to be sent to the respondent. This functionality is now in the services that consume these tokens (Frontstage / Response Operations).
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: goodbye@email.com
      deprecated: true
      responses:
        '200':
          $ref: '#/components/responses/EmailSent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
  /tokens/verify/{token}:
    get:
      summary: Verifies that the token provided is known and valid.
      description: Checks that the token provided is valid, not expired and relates to a known respondent. This functionality is now in the services that consume these tokens (Frontstage / Response Operations).
      tags:
        - respondents
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      deprecated: true
      responses:
        '200':
          description: The token is valid.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/BadTokenError'
        '409':
          $ref: '#/components/responses/ExpiredTokenError'
components:
  responses:
    RespondentNotFoundError:
      description: The respondent specified wasn't found.
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Respondent does not exist
    UnauthorizedError:
      description: Authentication information is missing or invalid.
      headers:
        WWW_Authenticate:
          schema:
            type: string
    BadTokenError:
      description: Either the token can't be decoded or the respondent that has been decoded from the token isn't recognised.
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Unknown email verification token
    ExpiredTokenError:
      description: The token has expired.
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Expired email verification token
    BusinessAssociationError:
      description: The business the enrolment is for couldn't be found or couldn't be correctly associated with.
    EmailSent:
      description: The email has been sent to the notification service.
  schemas:
    RespondentDetails:
      type: object
      properties:
        emailAddress:
          type: string
          format: email
          example: new@email.com
        firstName:
          type: string
          example: Jenny
        id:
          type: string
          format: uuid
          example: b8a336a2-3d15-11ea-b77f-2e728ce88125
        lastName:
          type: string
          example: Testerson
        sampleUnitType:
          type: string
          example: BI
        status:
          type: string
          example: ACTIVE
        telephone:
          type: string
          example: "01234567890"
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

security:
  - basicAuth: []