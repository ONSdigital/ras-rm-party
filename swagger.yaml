openapi: 3.0.2
info:
  title: RAS/RM Party Service
  description: A service for dealing with various parties (businesses, survey respondents etc and their enrolments)
  version: "1.0"

servers:
  - url: https://localhost:8081/party-api/v1
    description: The default path for Party in ras-rm-docker-dev

tags:
  - name: info
    description: Informational endpoints.
  - name: respondents
    description: Endpoints for interacting with survey respondents.
  - name: businesses
    description: Endpoints for interacting with businesses.

paths:
  /info:
    get:
      summary: Returns basic information about the service.
      description: Returns service information. If the `REPORT_DEPENDENCIES` environment variable is set to true, it will also report information on service dependencies.
      tags:
        - info
      servers:
        - url: https://localhost:8081
          description: The /info path doesn't use the /party-api/v1 prefix
      responses:
        '200':
          description: A JSON of basic information about the service.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: ras-rm-party
                  version:
                    type: string
                    example: "1.12.0"
                  dependencies:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: ras-party-db
  /businesses:
    post:
      summary: Creates a business (or creates versioned attributes against them if they exist).
      description: Will take the data provided and create a business if they don't exist, or create a new version of their attributes if they do. `sampleUnitRef`, `sampleUnitType` and `sampleSummaryId` are mandatory, as are `runname1-3` if `attributes` is included.
      tags:
        - businesses
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/BusinessDetailsShort'
      responses:
        '200':
          description: The business was added (or their attributes were updated).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessDetailsExtended'
  /emailverification/{token}:
    put:
      summary: Verifies a respondent's email.
      description: Checks the token is valid and in-date and then sets the respondent's account to ACTIVE.
      tags:
        - respondents
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      deprecated: true
      responses:
        '200':
          description: The token was valid and the respondent's account is now active.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/BadTokenError'
        '409':
          $ref: '#/components/responses/ExpiredTokenError'
  /resend-password-email-expired-token/{token}:
    post:
      summary: Resends a password reset email.
      description: Decodes the token to find the respondent and sends them a new password reset email.
      tags:
        - respondents
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      deprecated: true
      responses:
        '200':
          $ref: '#/components/responses/EmailSent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
  /resend-verification-email/{party_uuid}:
    post:
      summary: Resends a verification email.
      description: Looks up a respondent via their `party_uuid` and sends them a new verification email.
      tags:
        - respondents
      parameters:
        - in: path
          name: party_uuid
          required: true
          schema:
            type: string
            format: uuid
      deprecated: true
      responses:
        '200':
          $ref: '#/components/responses/EmailSent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
  /resend-verification-email-expired-token/{token}:
    post:
      summary: Resends a verification email.
      description: Decodes the token to find the respondent and sends them a new verification email.
      tags:
        - respondents
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      deprecated: true
      responses:
        '200':
          $ref: '#/components/responses/EmailSent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
  /respondents:
    post:
      summary: Creates a new respondent as well as any enrolments.
      description: Will put a new respondent and their enrolments in the database. If an `ID` field is provided, it will use this rather than generating a new UUID.
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailAddress:
                  type: string
                  format: email
                  example: new.employee@email.com
                firstName:
                  type: string
                  example: Johnny
                lastName:
                  type: string
                  example: Testerman
                password:
                  type: string
                  example: TAM*$4[7q>dh?s)&
                telephone:
                  type: string
                  example: 01234567890
                enrolmentCode:
                  type: string
                  example: g023at6a
                ID:
                  type: string
                  format: uuid
                  example: 2bc5fd04-8f9e-4ec0-bddf-bc646da3cdef
      responses:
        '200':
          description: The respondent was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespondentDetails'
        '400':
          description: One of the fields was missing or wrong (eg email already used, invalid enrolment code).
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/BusinessAssociationError'
  /respondents/add_survey:
    post:
      summary: Adds an existing respondent to a survey.
      description: Adds a respondent to a survey using their Party ID and an Enrolment Code.
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                party_id:
                  type: string
                  format: uuid
                  example: 8bfd05da-a4cd-4c9e-8bdd-3cb1fdaa2202
                enrolment_code:
                  type: string
                  example: 0pq6m33k
      responses:
        '200':
          description: The respondent was enrolled on the survey.
        '400':
          description: One of the fields was missing or the enrolment code was invalid.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/BusinessAssociationError'
  /respondents/email:
    put:
      summary: Changes a respondent's email address.
      description: Will update the respondent's email in the ras-party database and send a new verification email to the respondent. Functionally identical to `PUT /respondents/change_email`
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: old@email.com
                new_email_address:
                  type: string
                  format: email
                  example: new@email.com
      responses:
        '200':
          description: The email is changed and a JSON representing the respondent is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespondentDetails'
        '400':
          description: The provided request body was missing one of the required parameters.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: A respondent couldn't be found for the email address provided in `email_address`.
        '409':
          description: The email address provided in `new_email_address` is already in use for a different respondent.
  /respondents/change_email:
    put:
      summary: Changes a respondent's email address.
      description: Will update the respondent's email in the ras-party database and send a new verification email to the respondent. Functionally identical to `PUT /respondents/email`
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: old@email.com
                new_email_address:
                  type: string
                  format: email
                  example: new@email.com
      responses:
        '200':
          description: The email is changed and a JSON representing the respondent is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespondentDetails'
        '400':
          description: The provided request body was missing one of the required parameters.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: A respondent couldn't be found for the email address provided in `email_address`.
        '409':
          description: The email address provided in `new_email_address` is already in use for a different respondent.
  /respondents/change_enrolment_status:
    put:
      summary: Changes a respondent's enrolment status on a survey.
      description: Will set a respondent's enrolment status on the specified survey to the value of `change_flag` (usually `ENABLED` or `DISABLED`).
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                respondent_id:
                  type: string
                  format: uuid
                  example: de9204d8-41bd-4468-ba28-2c3989312e60
                business_id:
                  type: string
                  format: uuid
                  example: 0be98912-9d32-436e-b71d-fa23da0cc856
                survey_id:
                  type: string
                  format: uuid
                  example: 7644bfdc-69a0-4149-bd84-e595b02920e1
                change_flag:
                  type: string
                  example: DISABLED
      responses:
        '200':
          description: The respondent's enrolment status was successfully changed.
        '400':
          $ref: '#/components/responses/FieldMissingError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
  /respondents/change_password:
    put:
      summary: Changes a respondent's password.
      description: Will update the respondent's password in the auth database and send them a confirmation email. It will also set the respondent's account to ACTIVE and their enrolments to ENABLED.
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: hello@email.com
                new_password:
                  type: string
                  example: 6yNv!?DQs2/RuW45
      responses:
        '200':
          description: The password was successfully changed and the respondent's statuses updated.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
        '500':
          $ref: '#/components/responses/AuthServiceError'
  /respondents/disable-user-enrolments:
    patch:
      summary: Disables all a respondent's enrolments.
      description: Will disable all the enrolments a respondent has.
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: ex_employee@email.com
      responses:
        '200':
          description: All the respondent's enrolments have been successfully disabled.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 3 enrolments removed
        '400':
          $ref: '#/components/responses/FieldMissingError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
        '422':
          description: Multiple respondents were found for the provided email address.
  /respondents/edit-account-status/{party_id}:
    put:
      summary: Changes the account status of the specified respondent and notifies them by email.
      description: Sets the account status to the value of `status_change` (to either `ACTIVE` or `SUSPENDED`) and sends an email via notification service to let the respondent know.
      tags:
        - respondents
      parameters:
        - in: path
          name: party_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_change:
                  type: string
                  example: SUSPENDED
      responses:
        '200':
          description: The account status was successfully changed and an email sent to the notification service.
        '400':
          $ref: '#/components/responses/FieldMissingError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
        '500':
          $ref: '#/components/responses/AuthServiceError'
  /respondents/request_password_change:
    post:
      summary: Requests a password change link to be sent to a respondent's email.
      description: Generates a token and puts that into the correct GOV.UK Notifications Service template to be sent to the respondent. This functionality is now in the services that consume these tokens (Frontstage / Response Operations).
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: goodbye@email.com
      deprecated: true
      responses:
        '200':
          $ref: '#/components/responses/EmailSent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
  /tokens/verify/{token}:
    get:
      summary: Verifies that the token provided is known and valid.
      description: Checks that the token provided is valid, not expired and relates to a known respondent. This functionality is now in the services that consume these tokens (Frontstage / Response Operations).
      tags:
        - respondents
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      deprecated: true
      responses:
        '200':
          description: The token is valid.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/BadTokenError'
        '409':
          $ref: '#/components/responses/ExpiredTokenError'
components:
  responses:
    RespondentNotFoundError:
      description: The respondent specified wasn't found.
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Respondent does not exist
    UnauthorizedError:
      description: Authentication information is missing or invalid.
      headers:
        WWW_Authenticate:
          schema:
            type: string
    BadTokenError:
      description: Either the token can't be decoded or the respondent that has been decoded from the token isn't recognised.
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Unknown email verification token
    ExpiredTokenError:
      description: The token has expired.
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Expired email verification token
    BusinessAssociationError:
      description: The business the enrolment is for couldn't be found or couldn't be correctly associated with.
    FieldMissingError:
      description: One or more of the fields was missing.
    AuthServiceError:
      description: There was a problem communicating with the auth service.
    EmailSent:
      description: The email has been sent to the notification service.
  schemas:
    RespondentDetails:
      type: object
      properties:
        emailAddress:
          type: string
          format: email
          example: new@email.com
        firstName:
          type: string
          example: Jenny
        id:
          type: string
          format: uuid
          example: b8a336a2-3d15-11ea-b77f-2e728ce88125
        lastName:
          type: string
          example: Testerson
        sampleUnitType:
          type: string
          example: BI
        status:
          type: string
          example: ACTIVE
        telephone:
          type: string
          example: "01234567890"
    BusinessDetailsShort:
      type: object
      properties:
        sampleUnitRef:
          type: string
          format: uuid
          example: ede74d65-e45c-4451-ab31-6e4ebdd4d935
        sampleUnitType:
          type: string
          example: B
        sampleSummaryId:
          type: string
          format: uuid
          example: c9a4f9a5-573e-4870-a114-42279ab2aa3a
        attributes:
          type: object
          properties:
            ruref:
              type: string
              example: "9990123456"
            birthdate:
              type: string
              example: 22/01/2001
            checkletter:
              type: string
              example: K
            currency:
              type: string
              example: S
            entname1:
              type: string
              example: Fake Company (Ltd)
            entname2:
              type: string
              example: Alternative Name Producers
            entname3:
              type: string
              example: Small Canine Appreciation Concern
            entref:
              type: string
              example: "9990123456"
            entremkr:
              type: string
              example: E
            formType:
              type: string
              example: "0001"
            formtype:
              type: string
              example: "0001"
            froempment:
                type: number
                format: integer
                example: 10
            frosic2007:
                type: string
                example: "12345"
            frosic92:
                type: string
                example: "12345"
            frotover:
                type: number
                format: integer
                example: 1
            inclexcl:
              type: string
            legalstatus:
              type: string
              example: "3"
            region:
              type: string
              example: AA
            runame1:
              type: string
              example: Fake Company (Ltd)
            runame2:
              type: string
              example: Alternative Name Producers
            runame3:
              type: string
              example: Small Canine Appreciation Concern
            rusic2007:
              type: string
              example: "12345"
            rusic92:
              type: string
              example: "12345"
            seltype:
              type: string
              example: P
            tradstyle1:
              type: string
            cell_no:
              type: number
              format: integer
              example: 0
    BusinessDetailsExtended:
      type: object
      properties:
        associations:
          type: array
          items:
            type: object
            properties:
              enrolments:
                type: array
                items:
                  type: object
                  properties:
                    enrolmentStatus:
                      type: string
                      example: ENABLED
                    surveyId:
                      type: string
                      format: uuid
                      example: 1c266387-bd7f-4ccb-a62e-78a0106149dd
              name: 
                type: string
                example: Another Company Name PLC
              id: 
                type: string
                format: uuid
                example: ed938f69-e0ce-4021-86f9-c4e0f9800e44
              sampleUnitRef:
                type: string
                format: uuid
                example: 7768b21c-cac6-4dc8-bcb6-1a9fe829c14b
              sampleUnitType:
                type: string
                example: B
        sampleUnitRef:
          type: string
          format: uuid
          example: ede74d65-e45c-4451-ab31-6e4ebdd4d935
        sampleUnitType:
          type: string
          example: B
        sampleSummaryId:
          type: string
          format: uuid
          example: c9a4f9a5-573e-4870-a114-42279ab2aa3a
        id:
          type: string
          format: uuid
          example: 4686d17c-ee38-4880-8b1f-b3ee8e1bfc4d
        name:
          type: string
          example: Fake Comapny (Ltd) - Alternative Name Producers - Small Canine Appreciation Concern
        trading_as:
          type: string
          example: Trading Name Companies Holding
        attributes:
          type: object
          properties:
            ruref:
              type: string
              example: "9990123456"
            birthdate:
              type: string
              example: 22/01/2001
            checkletter:
              type: string
              example: K
            currency:
              type: string
              example: S
            entname1:
              type: string
              example: Fake Company (Ltd)
            entname2:
              type: string
              example: Alternative Name Producers
            entname3:
              type: string
              example: Small Canine Appreciation Concern
            entref:
              type: string
              example: "9990123456"
            entremkr:
              type: string
              example: E
            formType:
              type: string
              example: "0001"
            formtype:
              type: string
              example: "0001"
            froempment:
                type: number
                format: integer
                example: 10
            frosic2007:
                type: string
                example: "12345"
            frosic92:
                type: string
                example: "12345"
            frotover:
                type: number
                format: integer
                example: 1
            inclexcl:
              type: string
            legalstatus:
              type: string
              example: "3"
            region:
              type: string
              example: AA
            runame1:
              type: string
              example: Fake Company (Ltd)
            runame2:
              type: string
              example: Alternative Name Producers
            runame3:
              type: string
              example: Small Canine Appreciation Concern
            rusic2007:
              type: string
              example: "12345"
            rusic92:
              type: string
              example: "12345"
            seltype:
              type: string
              example: P
            tradstyle1:
              type: string
            cell_no:
              type: number
              format: integer
              example: 0
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

security:
  - basicAuth: []