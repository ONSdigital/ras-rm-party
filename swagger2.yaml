openapi: 3.0.2
info:
  title: RAS/RM Party Service
  description: A service for dealing with various parties (businesses, survey respondents etc and their enrolments)
  version: "2.0"

servers:
  - url: https://localhost:8081/party-api/v2
    description: The default path for Party in ras-rm-docker-dev

tags:
  - name: info
    description: Informational endpoints.
  - name: respondents
    description: Endpoints for interacting with survey respondents.
  - name: businesses
    description: Endpoints for interacting with businesses.

paths:
  /info:
    get:
      summary: Returns basic information about the service.
      description: Returns service information. If the `REPORT_DEPENDENCIES` environment variable is set to true, it will also report information on service dependencies.
      security: []
      tags:
        - info
      servers:
        - url: https://localhost:8081
          description: The /info path doesn't use the /party-api/v1 prefix
      responses:
        '200':
          description: A JSON of basic information about the service.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: ras-rm-party
                  version:
                    type: string
                    example: "1.12.0"
        '404':
          description: The basic information about the service couldn't be retrieved. The service may be configured incorrectly.
  /respondents:
    get:
      summary: Searches for a respondent based on provided attributes.
      description: Searches using the provided attributes using an AND search, returning any respondents that match the criteria.
      tags:
        - respondents
      parameters:
        - in: query
          name: firstName
          schema:
            type: string
            example: Jenny
        - in: query
          name: lastName
          schema:
            type: string
            example: Testerson
        - in: query
          name: emailAddress
          schema:
            type: string
            format: email
            example: test@email.com
        - in: query
          name: telephone
          schema:
            type: string
            example: "01234567890"
        - in: query
          name: status
          schema:
            type: string
            example: SUSPENDED
        - in: query
          name: businessId
          schema:
            type: string
            format: uuid
            example: fd6a1aa3-ba17-43a8-beae-a39e67c6444d
        - in: query
          name: surveyId
          schema:
            type: string
            format: uuid
            example: 71323711-6518-49d5-9767-c42b9fb03639
      responses:
        '200':
          description: The respondent was retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RespondentDetails'
        '400':
          description: No query parameters were provided.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: No respondents were found based on the parameters provided.
  /respondents/{id}:
    delete:
      summary: Deletes a respondent from the service.
      description: Unenrols a respondent from all surveys then deletes their enrolment history, business associations, pending enrolments and their representation in the service. Will not delete their account from the auth service.
      tags:
        - respondents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            example: 34597808-ec88-4e93-af2f-228e33ff7946
      responses:
        '204':
          description: A request to delete was successfully accepted.
        '400':
          $ref: '#/components/responses/MalformedIDError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
    get:
      summary: Retrieves a respondent from the service.
      description: Retrieves a respondent by the ID provided.
      tags:
        - respondents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            example: 34597808-ec88-4e93-af2f-228e33ff7946
      responses:
        '200':
          description: The respondent was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespondentDetails'
        '400':
          $ref: '#/components/responses/MalformedIDError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
    patch:
      summary: Updates the specified fields on the respondent.
      description: | 
        Updates all of the fields specified in the RequestBody for the respondent. 
        This is an atomic operation i.e. if one field can't be updated for whatever reason, none of them will be. 
        Associations will be created if they don't already exist, else they will be updated.
        `ID` is a valid field in the RequestBody, but will not be updated if changed.
      tags:
        - respondents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            example: 34597808-ec88-4e93-af2f-228e33ff7946
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/RespondentDetails'
      responses:
        '200':
          description: The respondent was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespondentDetails'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid.
      headers:
        WWW_Authenticate:
          schema:
            type: string
    MalformedIDError:
      description: The ID provided wasn't a proper UUID.
    RespondentNotFoundError:
      description: The respondent specified wasn't found.
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Respondent does not exist
  schemas:
    RespondentDetails:
      type: object
      properties:
        attributes:
          type: object
          properties:
            emailAddress:
              type: string
              format: email
              example: test@email.com
            id:
              type: string
              format: uuid
              example: 34597808-ec88-4e93-af2f-228e33ff7946
            lastName:
              type: string
              example: Testerson
            firstName:
              type: string
              example: Jenny
            telephone:
              type: string
              example: "01234567890"
        status:
          type: string
          example: ACTIVE
        associations:
          type: array
          items:
            type: object
            properties:
              enrolments:
                type: array
                items:
                  type: object
                  properties:
                    enrolmentStatus:
                      type: string
                      example: ENABLED
                    surveyId:
                      type: string
                      format: uuid
                      example: 71323711-6518-49d5-9767-c42b9fb03639
              name: 
                type: string
                example: Another Company Name PLC
              id: 
                type: string
                format: uuid
                example: fd6a1aa3-ba17-43a8-beae-a39e67c6444d
              sampleUnitRef:
                type: string
                format: uuid
                example: 1ae6064d-da62-4337-9c7c-733d121015f9
security:
  - basicAuth: []