openapi: 3.0.2
info:
  title: RAS/RM Party Service
  description: A service for dealing with various parties (businesses, survey respondents etc and their enrolments)
  version: "2.0"

servers:
  - url: https://localhost:8081/party-api/v2
    description: The default path for Party in ras-rm-docker-dev

tags:
  - name: info
    description: Informational endpoints.
  - name: respondents
    description: Endpoints for interacting with survey respondents.
  - name: businesses
    description: Endpoints for interacting with businesses.

paths:
  /info:
    get:
      summary: Returns basic information about the service.
      description: Returns service information. If the `REPORT_DEPENDENCIES` environment variable is set to true, it will also report information on service dependencies.
      security: []
      tags:
        - info
      servers:
        - url: https://localhost:8081
          description: The /info path doesn't use the /party-api/v1 prefix
      responses:
        '200':
          description: A JSON of basic information about the service.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: ras-rm-party
                  version:
                    type: string
                    example: "1.12.0"
        '404':
          description: The basic information about the service couldn't be retrieved. The service may be configured incorrectly.
  /respondents:
    get:
      summary: Searches for a respondent based on provided attributes.
      description: Searches using the provided attributes using an AND search, returning any respondents that match the criteria.
      tags:
        - respondents
      parameters:
        - in: query
          name: firstName
          schema:
            type: string
            example: Jenny
        - in: query
          name: lastName
          schema:
            type: string
            example: Testerson
        - in: query
          name: emailAddress
          schema:
            type: string
            format: email
            example: test@email.com
        - in: query
          name: telephone
          schema:
            type: string
            example: "01234567890"
        - in: query
          name: status
          schema:
            type: string
            example: SUSPENDED
        - in: query
          name: businessId
          schema:
            type: string
            format: uuid
            example: fd6a1aa3-ba17-43a8-beae-a39e67c6444d
        - in: query
          name: surveyId
          schema:
            type: string
            format: uuid
            example: 71323711-6518-49d5-9767-c42b9fb03639
        - in: query
          name: offset
          schema:
            type: number
            format: integer
            default: 0
        - in: query
          name: limit
          schema:
            type: number
      responses:
        '200':
          description: Respondent(s) were retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RespondentDetails'
        '400':
          $ref: '#/components/responses/QueryParametersMissingError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: No respondents were found based on the parameters provided.
    post:
      summary: Creates a new respondent.
      description: | 
        Creates a new respondent from the data in the RequestBody. 
        If an `ID` field is provided, it will use this rather than generating a new UUID.
      tags:
        - respondents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/RespondentDetails'
                enrolmentCodes:
                  type: array
                  items:
                    type: string
                    example: g023at6a
                    minItems: 1
      responses:
        '201':
          description: The respondent was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RespondentDetails'
        '400':
          description: A required field (attributes or enrolment code) wasn't provided or was in an incorrect format.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: A provided enrolment code couldn't be found.
        '422':
          description: A provided enrolment code has expired or the business associated with an enrolment code couldn't be associated with.
  /respondents/{id}:
    delete:
      summary: Deletes a respondent from the service.
      description: | 
        Unenrols a respondent from all surveys then deletes their enrolment history, business associations, pending enrolments and their representation in the service. 
        Will not delete their account from the auth service.
      tags:
        - respondents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            example: 34597808-ec88-4e93-af2f-228e33ff7946
      responses:
        '204':
          description: A request to delete was successfully accepted.
        '400':
          $ref: '#/components/responses/MalformedIDError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
    get:
      summary: Retrieves a respondent from the service.
      description: Retrieves a respondent by the ID provided.
      tags:
        - respondents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            example: 34597808-ec88-4e93-af2f-228e33ff7946
      responses:
        '200':
          description: The respondent was retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RespondentDetails'
        '400':
          $ref: '#/components/responses/MalformedIDError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/RespondentNotFoundError'
    patch:
      summary: Updates the specified fields on the respondent.
      description: | 
        Updates all of the fields specified in the RequestBody for the respondent. 
        This is an atomic operation i.e. if one field can't be updated for whatever reason, none of them will be. 
        Associations will be created if they don't already exist, else they will be updated.
        `ID` is a valid field in the RequestBody, but shouldn't be changed and a `400 Bad Request` will returned if changing it is attempted.
        The respondent will be enrolled on any surveys associated to any provided `enrolmentCodes`.
      tags:
        - respondents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            example: 34597808-ec88-4e93-af2f-228e33ff7946
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/RespondentDetails'
                enrolmentCodes:
                  type: array
                  items:
                    type: string
                    example: g023at6a
                    minItems: 0
      responses:
        '200':
          description: The respondent was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RespondentDetails'
        '400':
          description: One or more of the fields provided in the RequestBody wasn't part of the schema, wasn't set to a valid value, or the ID provided wasn't a proper UUID.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: The respondent wasn't found, one of the associated entities wasn't found by its ID or one of the provided enrolment codes wasn't found.
        '409':
          description: The `emailAddress` provided is already in use for a different respondent or the respondent is already enrolled on a survey attached to a provided enrolment code.
        '422':
          description: Part or all of the update failed, and the action has been rolled back. No enrolments have been generated.
  /businesses:
    get:
      summary: Searches for a business based on provided keyword.
      description: Finds businesses based on information in the query, matching on the business name, trading as or business reference. Search is an AND (ie results must match all query strings) with `page` and `limit` pagination.
      tags:
        - businesses
      parameters:
        - in: query
          name: keyword
          required: true
          schema:
            type: string
            example: "Ltd"
          style: form
          explode: true
        - in: query
          name: page
          required: false
          schema:
            type: number
            format: integer
            default: 1
        - in: query
          name: limit
          required: false
          schema:
            type: number
            format: integer
            default: 10
      responses:
        '200':
          description: Business(es) were successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BusinessDetails'
        '400':
          $ref: '#/components/responses/QueryParametersMissingError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: No businesses were found based on the parameters provided.
  /businesses/{id}:
    get:
      summary: Retrieves information on a business.
      description: Gets information on a business, including all attributes and associations.
      tags:
        - businesses
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            example: 4686d17c-ee38-4880-8b1f-b3ee8e1bfc4d
      responses:
        '200':
          description: The business was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BusinessDetails'
        '400':
          $ref: '#/components/responses/MalformedIDError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/BusinessNotFoundError'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid.
      headers:
        WWW_Authenticate:
          schema:
            type: string
    MalformedIDError:
      description: The ID provided wasn't a proper UUID.
    RespondentNotFoundError:
      description: The respondent specified wasn't found.
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Respondent does not exist
    BusinessNotFoundError:
      description: The business specified wasn't found.
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Business does not exist
    QueryParametersMissingError:
      description: No query parameters were provided.
  schemas:
    RespondentDetails:
      type: object
      properties:
        attributes:
          type: object
          properties:
            emailAddress:
              type: string
              format: email
              example: test@email.com
            id:
              type: string
              format: uuid
              example: 34597808-ec88-4e93-af2f-228e33ff7946
            lastName:
              type: string
              example: Testerson
            firstName:
              type: string
              example: Jenny
            telephone:
              type: string
              example: "01234567890"
        status:
          type: string
          example: ACTIVE
        associations:
          type: array
          items:
            type: object
            properties:
              enrolments:
                type: array
                items:
                  type: object
                  properties:
                    enrolmentStatus:
                      type: string
                      example: ENABLED
                    surveyId:
                      type: string
                      format: uuid
                      example: 71323711-6518-49d5-9767-c42b9fb03639
              name: 
                type: string
                example: Another Company Name PLC
              id: 
                type: string
                format: uuid
                example: fd6a1aa3-ba17-43a8-beae-a39e67c6444d
              sampleUnitRef:
                type: string
                format: uuid
                example: 1ae6064d-da62-4337-9c7c-733d121015f9
    BusinessDetails:
      type: object
      properties:
        associations:
          type: array
          items:
            type: object
            properties:
              enrolments:
                type: array
                items:
                  type: object
                  properties:
                    enrolmentStatus:
                      type: string
                      example: ENABLED
                    surveyId:
                      type: string
                      format: uuid
                      example: 1c266387-bd7f-4ccb-a62e-78a0106149dd
              name: 
                type: string
                example: Another Company Name PLC
              id: 
                type: string
                format: uuid
                example: ed938f69-e0ce-4021-86f9-c4e0f9800e44
              sampleUnitRef:
                type: string
                format: uuid
                example: 7768b21c-cac6-4dc8-bcb6-1a9fe829c14b
        sampleUnitRef:
          type: string
          format: uuid
          example: ede74d65-e45c-4451-ab31-6e4ebdd4d935
        sampleSummaryId:
          type: string
          format: uuid
          example: c9a4f9a5-573e-4870-a114-42279ab2aa3a
        id:
          type: string
          format: uuid
          example: 4686d17c-ee38-4880-8b1f-b3ee8e1bfc4d
        name:
          type: string
          example: Fake Comapny (Ltd) - Alternative Name Producers - Small Canine Appreciation Concern
        tradingAs:
          type: string
          example: Trading Name Companies Holding
        attributes:
          type: object
          properties:
            ruRef:
              type: string
              example: "9990123456"
            birthDate:
              type: string
              example: 22/01/2001
            checkLetter:
              type: string
              example: K
            currency:
              type: string
              example: S
            entName1:
              type: string
              example: Fake Company (Ltd)
            entName2:
              type: string
              example: Alternative Name Producers
            entName3:
              type: string
              example: Small Canine Appreciation Concern
            entRef:
              type: string
              example: "9990123456"
            entRemkr:
              type: string
              example: E
            formType:
              type: string
              example: "0001"
            froEmpment:
                type: number
                format: integer
                example: 10
            froSic2007:
                type: string
                example: "12345"
            froSic92:
                type: string
                example: "12345"
            froTover:
                type: number
                format: integer
                example: 1
            inclExcl:
              type: string
            legalStatus:
              type: string
              example: "3"
            region:
              type: string
              example: AA
            ruName1:
              type: string
              example: Fake Company (Ltd)
            ruName2:
              type: string
              example: Alternative Name Producers
            ruName3:
              type: string
              example: Small Canine Appreciation Concern
            ruSic2007:
              type: string
              example: "12345"
            ruSic92:
              type: string
              example: "12345"
            selType:
              type: string
              example: P
            tradStyle1:
              type: string
            cellNo:
              type: number
              format: integer
              example: 0
security:
  - basicAuth: []